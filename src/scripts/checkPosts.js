require('dotenv').config();
const mongoose = require('mongoose');
const Post = require('../models/Post');
const Category = require('../models/Category');

const checkPosts = async () => {
    try {
        await mongoose.connect('mongodb://localhost:27017/ltvlaw');
        console.log('MongoDB Connected\n');

        // L·∫•y t·∫•t c·∫£ categories
        const categories = await Category.find().sort({ name: 1 });
        
        console.log('üìä TH·ªêNG K√ä B√ÅI VI·∫æT THEO DANH M·ª§C:');
        console.log('=' .repeat(50));
        
        let totalPosts = 0;
        
        for (const category of categories) {
            const count = await Post.countDocuments({ categories: category._id });
            totalPosts += count;
            
            // Hi·ªÉn th·ªã th·ªëng k√™
            const status = count >= 6 ? '‚úÖ' : count >= 3 ? '‚ö†Ô∏è ' : '‚ùå';
            console.log(`${status} ${category.name}: ${count} b√†i vi·∫øt`);
            
            // Hi·ªÉn th·ªã 3 b√†i vi·∫øt ƒë·∫ßu ti√™n c·ªßa category
            const posts = await Post.find({ categories: category._id })
                .select('title viewCount')
                .sort({ createdAt: -1 })
                .limit(3);
                
            posts.forEach((post, index) => {
                console.log(`   ${index + 1}. ${post.title} (${post.viewCount} l∆∞·ª£t xem)`);
            });
            
            if (count > 3) {
                console.log(`   ... v√† ${count - 3} b√†i vi·∫øt kh√°c\n`);
            } else {
                console.log('');
            }
        }
        
        console.log('=' .repeat(50));
        console.log(`üìà T·ªîNG C·ªòNG: ${totalPosts} b√†i vi·∫øt`);
        console.log(`üìÇ S·ªê DANH M·ª§C: ${categories.length} danh m·ª•c`);
        console.log(`üìä TRUNG B√åNH: ${Math.round(totalPosts / categories.length)} b√†i/danh m·ª•c\n`);
        
        // Ki·ªÉm tra b√†i vi·∫øt n·ªïi b·∫≠t
        const featuredPosts = await Post.countDocuments({ featured: true });
        console.log(`‚≠ê B√ÅI VI·∫æT N·ªîI B·∫¨T: ${featuredPosts} b√†i`);
        
        // Ki·ªÉm tra b√†i vi·∫øt xem nhi·ªÅu nh·∫•t
        const mostViewed = await Post.findOne().sort({ viewCount: -1 }).select('title viewCount');
        if (mostViewed) {
            console.log(`üëÄ XEM NHI·ªÄU NH·∫§T: "${mostViewed.title}" (${mostViewed.viewCount} l∆∞·ª£t xem)`);
        }
        
        mongoose.connection.close();
        console.log('\n‚úÖ Ki·ªÉm tra ho√†n t·∫•t!');
        
    } catch (error) {
        console.error('‚ùå L·ªói:', error);
        mongoose.connection.close();
        process.exit(1);
    }
};

checkPosts(); 